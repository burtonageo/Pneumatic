#version 330

layout(location = 0) in vec3 vertexPosition_modelspace;
layout(location = 1) in vec4 color;
layout(location = 2) in vec2 texCoord;

out Vertex	{
  out vec4 color;
  out vec2 texCoord;
} OUT;

uniform mat4 MVP;
uniform float time;

mat4 rotationMatrix(vec3 axis, float angle)
{
  axis = normalize(axis);
  float s = sin(angle);
  float c = cos(angle);
  float oc = 1.0 - c;

  return mat4(oc * axis.x * axis.x + c,          oc * axis.x * axis.y - axis.z * s, oc * axis.z * axis.x + axis.y * s, 0.0,
              oc * axis.x * axis.y + axis.z * s, oc * axis.y * axis.y + c,          oc * axis.y * axis.z - axis.x * s, 0.0,
              oc * axis.z * axis.x - axis.y * s, oc * axis.y * axis.z + axis.x * s, oc * axis.z * axis.z + c,          0.0,
              0.0,                               0.0,                               0.0,                               1.0);
}

void main()
{
  float scale = abs(sin(time)) + 0.2;
  vec4 worldPos = vec4(vertexPosition_modelspace.x * scale,
                       vertexPosition_modelspace.y * scale,
                       vertexPosition_modelspace.z * scale, 1.0);
  gl_Position  = MVP * worldPos;
  OUT.color    = color;
  OUT.texCoord = texCoord;
}
